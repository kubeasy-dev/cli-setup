apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
    control-plane: controller-manager
  name: challenge-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: connectivityvalidations.challenge.kubeasy.dev
spec:
  group: challenge.kubeasy.dev
  names:
    kind: ConnectivityValidation
    listKind: ConnectivityValidationList
    plural: connectivityvalidations
    singular: connectivityvalidation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ConnectivityValidation is the Schema for the connectivityvalidations
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ConnectivityValidationSpec defines the desired state of ConnectivityValidation.
            properties:
              source:
                description: Source defines the pod(s) from which to test connectivity
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  labelSelector:
                    description: |-
                      A label selector is a label query over a set of resources. The result of matchLabels and
                      matchExpressions are ANDed. An empty label selector matches all objects. A null
                      label selector matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                type: object
              targets:
                description: Targets is a list of services/endpoints to test connectivity
                  to
                items:
                  description: ConnectivityTarget defines a target to test connectivity
                    to
                  properties:
                    expectedStatusCode:
                      description: ExpectedStatusCode is the expected HTTP status
                        code (optional, defaults to 200)
                      format: int32
                      type: integer
                    path:
                      description: Path is the HTTP path to request (optional, defaults
                        to "/")
                      type: string
                    port:
                      description: Port is the port to connect to
                      format: int32
                      type: integer
                    service:
                      description: Service is the service name to connect to
                      type: string
                  required:
                  - port
                  - service
                  type: object
                type: array
              timeoutSeconds:
                description: TimeoutSeconds is the timeout for each connectivity test
                  (optional, defaults to 5)
                format: int64
                type: integer
            required:
            - source
            - targets
            type: object
          status:
            description: ConnectivityValidationStatus defines the observed state of
              ConnectivityValidation.
            properties:
              allPassed:
                description: AllPassed is true if all checks passed for all targets
                type: boolean
              error:
                description: Error contains a message if the last validation failed
                  or was incomplete
                type: string
              lastChecked:
                description: LastChecked is the timestamp of the last validation
                format: date-time
                type: string
              resources:
                description: Resources lists all source pods and their connectivity
                  test results
                items:
                  description: ConnectivityValidationResourceResult holds results
                    for a single source pod
                  properties:
                    message:
                      description: Message provides additional details about the result
                      type: string
                    passed:
                      description: Passed is true if all connectivity tests passed
                      type: boolean
                    target:
                      description: Target identifies the source pod
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - name
                      - namespace
                      type: object
                    targetResults:
                      additionalProperties:
                        description: ConnectivityResult holds the result of a connectivity
                          test to a single target
                        properties:
                          connected:
                            description: Connected is true if connection was successful
                            type: boolean
                          message:
                            description: Message provides additional details about
                              the result
                            type: string
                          port:
                            description: Port is the target port
                            format: int32
                            type: integer
                          service:
                            description: Service is the target service name
                            type: string
                          statusCode:
                            description: StatusCode is the HTTP status code received
                              (if applicable)
                            format: int32
                            type: integer
                        required:
                        - connected
                        - port
                        - service
                        type: object
                      description: TargetResults maps target services to their connectivity
                        results
                      type: object
                  required:
                  - passed
                  - target
                  - targetResults
                  type: object
                type: array
            required:
            - allPassed
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: eventvalidations.challenge.kubeasy.dev
spec:
  group: challenge.kubeasy.dev
  names:
    kind: EventValidation
    listKind: EventValidationList
    plural: eventvalidations
    singular: eventvalidation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EventValidation is the Schema for the eventvalidations API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EventValidationSpec defines the desired state of EventValidation.
            properties:
              forbiddenReasons:
                description: ForbiddenReasons is a list of event reasons that should
                  NOT be present
                items:
                  type: string
                type: array
              sinceSeconds:
                description: SinceSeconds specifies how far back to look for events
                  (optional, defaults to 300)
                format: int64
                type: integer
              target:
                description: Target defines the selector for Kubernetes resources
                  to validate
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  labelSelector:
                    description: |-
                      A label selector is a label query over a set of resources. The result of matchLabels and
                      matchExpressions are ANDed. An empty label selector matches all objects. A null
                      label selector matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - forbiddenReasons
            - target
            type: object
          status:
            description: EventValidationStatus defines the observed state of EventValidation.
            properties:
              allPassed:
                description: AllPassed is true if all checks passed for all targets
                type: boolean
              error:
                description: Error contains a message if the last validation failed
                  or was incomplete
                type: string
              lastChecked:
                description: LastChecked is the timestamp of the last validation
                format: date-time
                type: string
              resources:
                description: Resources lists all resources found by the selector and
                  their validation results
                items:
                  description: EventValidationResourceResult holds results for a single
                    resource
                  properties:
                    forbiddenEventsFound:
                      description: ForbiddenEventsFound lists any forbidden events
                        that were found
                      items:
                        description: ForbiddenEvent represents a forbidden event that
                          was found
                        properties:
                          count:
                            description: Count is the number of times this event occurred
                            format: int32
                            type: integer
                          lastTimestamp:
                            description: LastTimestamp is when the event last occurred
                            format: date-time
                            type: string
                          message:
                            description: Message is the event message
                            type: string
                          reason:
                            description: Reason is the event reason (e.g., "OOMKilling")
                            type: string
                        required:
                        - count
                        - lastTimestamp
                        - message
                        - reason
                        type: object
                      type: array
                    message:
                      description: Message provides additional details about the result
                      type: string
                    passed:
                      description: Passed is true if no forbidden events were found
                      type: boolean
                    target:
                      description: Target identifies the resource
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - name
                      - namespace
                      type: object
                  required:
                  - passed
                  - target
                  type: object
                type: array
            required:
            - allPassed
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: logvalidations.challenge.kubeasy.dev
spec:
  group: challenge.kubeasy.dev
  names:
    kind: LogValidation
    listKind: LogValidationList
    plural: logvalidations
    singular: logvalidation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LogValidation is the Schema for the logvalidations API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LogValidationSpec defines the desired state of LogValidation.
            properties:
              container:
                description: Container is the name of the container to check (optional,
                  defaults to first container)
                type: string
              expectedStrings:
                description: ExpectedStrings is a list of strings that should be present
                  in the logs
                items:
                  type: string
                type: array
              sinceSeconds:
                description: SinceSeconds specifies how far back to look in logs (optional,
                  defaults to 60)
                format: int64
                type: integer
              target:
                description: Target defines the selector for Kubernetes resources
                  to validate
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  labelSelector:
                    description: |-
                      A label selector is a label query over a set of resources. The result of matchLabels and
                      matchExpressions are ANDed. An empty label selector matches all objects. A null
                      label selector matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - expectedStrings
            - target
            type: object
          status:
            description: LogValidationStatus defines the observed state of LogValidation.
            properties:
              allPassed:
                description: AllPassed is true if all checks passed for all targets
                type: boolean
              error:
                description: Error contains a message if the last validation failed
                  or was incomplete
                type: string
              lastChecked:
                description: LastChecked is the timestamp of the last validation
                format: date-time
                type: string
              resources:
                description: Resources lists all resources found by the selector and
                  their validation results
                items:
                  description: LogValidationResourceResult holds results for a single
                    resource
                  properties:
                    message:
                      description: Message provides additional details about the result
                      type: string
                    passed:
                      description: Passed is true if all expected strings were found
                      type: boolean
                    stringsFound:
                      additionalProperties:
                        type: boolean
                      description: StringsFound indicates which expected strings were
                        found in logs
                      type: object
                    target:
                      description: Target identifies the resource
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - name
                      - namespace
                      type: object
                  required:
                  - passed
                  - stringsFound
                  - target
                  type: object
                type: array
            required:
            - allPassed
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: metricsvalidations.challenge.kubeasy.dev
spec:
  group: challenge.kubeasy.dev
  names:
    kind: MetricsValidation
    listKind: MetricsValidationList
    plural: metricsvalidations
    singular: metricsvalidation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MetricsValidation is the Schema for the metricsvalidations API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MetricsValidationSpec defines the desired state of MetricsValidation.
            properties:
              checks:
                description: Checks is a list of metric checks to perform
                items:
                  description: MetricCheck defines a metric to check
                  properties:
                    metric:
                      description: |-
                        Metric is the name of the metric to check
                        Supported: restartCount, readyReplicas, availableReplicas
                      type: string
                    operator:
                      description: |-
                        Operator is the comparison operator
                        Supported: LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, Equal, NotEqual
                      type: string
                    value:
                      description: Value is the value to compare against
                      format: int32
                      type: integer
                  required:
                  - metric
                  - operator
                  - value
                  type: object
                type: array
              target:
                description: Target defines the selector for Kubernetes resources
                  to validate
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  labelSelector:
                    description: |-
                      A label selector is a label query over a set of resources. The result of matchLabels and
                      matchExpressions are ANDed. An empty label selector matches all objects. A null
                      label selector matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                type: object
            required:
            - checks
            - target
            type: object
          status:
            description: MetricsValidationStatus defines the observed state of MetricsValidation.
            properties:
              allPassed:
                description: AllPassed is true if all checks passed for all targets
                type: boolean
              error:
                description: Error contains a message if the last validation failed
                  or was incomplete
                type: string
              lastChecked:
                description: LastChecked is the timestamp of the last validation
                format: date-time
                type: string
              resources:
                description: Resources lists all resources found by the selector and
                  their validation results
                items:
                  description: MetricsValidationResourceResult holds results for a
                    single resource
                  properties:
                    checkResults:
                      additionalProperties:
                        description: MetricCheckResult holds the result of a single
                          metric check
                        properties:
                          actual:
                            description: Actual is the actual value found
                            format: int32
                            type: integer
                          expected:
                            description: Expected describes the expected condition
                            type: string
                          metric:
                            description: Metric is the metric name
                            type: string
                          passed:
                            description: Passed is true if the check passed
                            type: boolean
                        required:
                        - actual
                        - expected
                        - metric
                        - passed
                        type: object
                      description: CheckResults maps metric names to their check results
                      type: object
                    message:
                      description: Message provides additional details about the result
                      type: string
                    passed:
                      description: Passed is true if all metric checks passed
                      type: boolean
                    target:
                      description: Target identifies the resource
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - name
                      - namespace
                      type: object
                  required:
                  - checkResults
                  - passed
                  - target
                  type: object
                type: array
            required:
            - allPassed
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: rbacvalidations.challenge.kubeasy.dev
spec:
  group: challenge.kubeasy.dev
  names:
    kind: RBACValidation
    listKind: RBACValidationList
    plural: rbacvalidations
    singular: rbacvalidation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RBACValidation is the Schema for the rbacvalidations API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RBACValidationSpec defines the desired state of RBACValidation.
            properties:
              namespace:
                description: Namespace is the namespace of the service account (optional,
                  defaults to CR namespace)
                type: string
              permissions:
                description: Permissions is a list of permissions that should be granted
                items:
                  description: RBACPermission defines a permission to check
                  properties:
                    group:
                      description: Group is the API group of the resource
                      type: string
                    name:
                      description: Name is the name of the resource (optional)
                      type: string
                    resource:
                      description: Resource is the resource type
                      type: string
                    verb:
                      description: Verb is the action to check (get, list, watch,
                        create, update, patch, delete)
                      type: string
                  required:
                  - resource
                  - verb
                  type: object
                type: array
              serviceAccountName:
                description: ServiceAccountName is the name of the service account
                  to check
                type: string
            required:
            - permissions
            - serviceAccountName
            type: object
          status:
            description: RBACValidationStatus defines the observed state of RBACValidation.
            properties:
              allPassed:
                description: AllPassed is true if all permissions are granted
                type: boolean
              error:
                description: Error contains a message if the last validation failed
                  or was incomplete
                type: string
              lastChecked:
                description: LastChecked is the timestamp of the last validation
                format: date-time
                type: string
              permissionResults:
                additionalProperties:
                  description: PermissionResult holds the result of a single permission
                    check
                  properties:
                    allowed:
                      description: Allowed is true if the permission is granted
                      type: boolean
                    reason:
                      description: Reason provides details about why permission was
                        denied (if applicable)
                      type: string
                    resource:
                      description: Resource is the resource type checked
                      type: string
                    verb:
                      description: Verb is the action checked
                      type: string
                  required:
                  - allowed
                  - resource
                  - verb
                  type: object
                description: PermissionResults maps each permission to its check result
                type: object
            required:
            - allPassed
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: statusvalidations.challenge.kubeasy.dev
spec:
  group: challenge.kubeasy.dev
  names:
    kind: StatusValidation
    listKind: StatusValidationList
    plural: statusvalidations
    singular: statusvalidation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: StatusValidation is the Schema for the statusvalidations API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: StatusValidationSpec defines the desired state of StatusValidation.
            properties:
              conditions:
                description: Conditions is a list of conditions to check
                items:
                  description: StatusCondition defines a condition to check
                  properties:
                    status:
                      description: Status is the expected status value (e.g., "True",
                        "False")
                      type: string
                    type:
                      description: Type is the condition type (e.g., "Ready", "Complete")
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              target:
                description: Target defines the selector for Kubernetes resources
                  to validate
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  labelSelector:
                    description: |-
                      A label selector is a label query over a set of resources. The result of matchLabels and
                      matchExpressions are ANDed. An empty label selector matches all objects. A null
                      label selector matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  name:
                    type: string
                required:
                - apiVersion
                - kind
                type: object
              timeoutSeconds:
                description: TimeoutSeconds is the maximum time to wait for conditions
                  (optional)
                format: int64
                type: integer
            required:
            - conditions
            - target
            type: object
          status:
            description: StatusValidationStatus defines the observed state of StatusValidation.
            properties:
              allPassed:
                description: AllPassed is true if all checks passed for all targets
                type: boolean
              error:
                description: Error contains a message if the last validation failed
                  or was incomplete
                type: string
              lastChecked:
                description: LastChecked is the timestamp of the last validation
                format: date-time
                type: string
              resources:
                description: Resources lists all resources found by the selector and
                  their validation results
                items:
                  description: StatusValidationResourceResult holds results for a
                    single resource
                  properties:
                    conditionResults:
                      additionalProperties:
                        description: ConditionResult holds the result of a single
                          condition check
                        properties:
                          actual:
                            description: Actual is the actual status value found
                            type: string
                          expected:
                            description: Expected is the expected status value
                            type: string
                          matched:
                            description: Matched is true if expected matches actual
                            type: boolean
                        required:
                        - actual
                        - expected
                        - matched
                        type: object
                      description: ConditionResults maps condition types to their
                        check results
                      type: object
                    message:
                      description: Message provides additional details about the result
                      type: string
                    passed:
                      description: Passed is true if all conditions matched
                      type: boolean
                    target:
                      description: Target identifies the resource
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - apiVersion
                      - kind
                      - name
                      - namespace
                      type: object
                  required:
                  - conditionResults
                  - passed
                  - target
                  type: object
                type: array
            required:
            - allPassed
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-controller-manager
  namespace: challenge-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-leader-election-role
  namespace: challenge-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-connectivityvalidation-admin-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - connectivityvalidations
  verbs:
  - '*'
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - connectivityvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-connectivityvalidation-editor-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - connectivityvalidations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - connectivityvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-connectivityvalidation-viewer-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - connectivityvalidations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - connectivityvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-dynamicvalidation-editor-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - dynamicvalidations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - dynamicvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-dynamicvalidation-viewer-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - dynamicvalidations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - dynamicvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-eventvalidation-admin-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - eventvalidations
  verbs:
  - '*'
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - eventvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-eventvalidation-editor-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - eventvalidations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - eventvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-eventvalidation-viewer-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - eventvalidations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - eventvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-logvalidation-admin-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - logvalidations
  verbs:
  - '*'
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - logvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-logvalidation-editor-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - logvalidations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - logvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-logvalidation-viewer-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - logvalidations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - logvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: challenge-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - connectivityvalidations
  - eventvalidations
  - logvalidations
  - metricsvalidations
  - rbacvalidations
  - statusvalidations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - connectivityvalidations/finalizers
  - eventvalidations/finalizers
  - logvalidations/finalizers
  - metricsvalidations/finalizers
  - rbacvalidations/finalizers
  - statusvalidations/finalizers
  verbs:
  - update
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - connectivityvalidations/status
  - eventvalidations/status
  - logvalidations/status
  - metricsvalidations/status
  - rbacvalidations/status
  - statusvalidations/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: challenge-operator-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: challenge-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-metricsvalidation-admin-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - metricsvalidations
  verbs:
  - '*'
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - metricsvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-metricsvalidation-editor-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - metricsvalidations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - metricsvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-metricsvalidation-viewer-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - metricsvalidations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - metricsvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-rbacvalidation-admin-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - rbacvalidations
  verbs:
  - '*'
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - rbacvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-rbacvalidation-editor-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - rbacvalidations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - rbacvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-rbacvalidation-viewer-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - rbacvalidations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - rbacvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-staticvalidation-editor-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - staticvalidations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - staticvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-staticvalidation-viewer-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - staticvalidations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - staticvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-statusvalidation-admin-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - statusvalidations
  verbs:
  - '*'
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - statusvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-statusvalidation-editor-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - statusvalidations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - statusvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-statusvalidation-viewer-role
rules:
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - statusvalidations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - challenge.kubeasy.dev
  resources:
  - statusvalidations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-leader-election-rolebinding
  namespace: challenge-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: challenge-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: challenge-operator-controller-manager
  namespace: challenge-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
  name: challenge-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: challenge-operator-manager-role
subjects:
- kind: ServiceAccount
  name: challenge-operator-controller-manager
  namespace: challenge-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: challenge-operator-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: challenge-operator-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: challenge-operator-controller-manager
  namespace: challenge-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
    control-plane: controller-manager
  name: challenge-operator-controller-manager-metrics-service
  namespace: challenge-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: challenge-operator
    control-plane: controller-manager
  name: challenge-operator-controller-manager
  namespace: challenge-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        image: ghcr.io/kubeasy-dev/challenge-operator:feat-specialized-validations
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: challenge-operator-controller-manager
      terminationGracePeriodSeconds: 10
